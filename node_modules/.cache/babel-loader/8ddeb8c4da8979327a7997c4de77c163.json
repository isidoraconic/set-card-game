{"ast":null,"code":"var _jsxFileName = \"/Users/isidoraconic/Desktop/web-projects/set-game/src/App.js\";\nimport React from 'react';\nimport Icon from \"./components/Icon\";\nimport { connect } from 'react-redux';\nimport Deck from './components/Deck';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  onclick(action) {\n    this.props.dispatch({\n      type: action\n    });\n  }\n\n  render() {\n    //from: https://stackoverflow.com/questions/45784479/create-a-bunch-of-divs-via-an-array\n    let renderedOutput = this.props.faceDown.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", item, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 58\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"These are the icons\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          type: \"flower\",\n          color: \"pink\",\n          fill: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Icon, {\n          type: \"heart\",\n          color: \"blue\",\n          fill: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Icon, {\n          type: \"star\",\n          color: \"green\",\n          fill: \"green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.onclick(\"NEW CARD\"),\n        children: \"New Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.onclick(\"CLEAR\"),\n        children: \"Clear Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Deck, {\n        children: [\"Deck: \", renderedOutput, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nlet mapDispatchToProps = function (dispatch, props) {\n  return {\n    dispatch: dispatch\n  };\n};\n\nlet mapStateToProps = function (state, props) {\n  return {\n    faceUp: state.faceUp,\n    faceDown: state.faceDown,\n    selected: state.selected\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/isidoraconic/Desktop/web-projects/set-game/src/App.js"],"names":["React","Icon","connect","Deck","App","Component","constructor","props","onclick","action","dispatch","type","render","renderedOutput","faceDown","map","item","mapDispatchToProps","mapStateToProps","state","faceUp","selected"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,OAAO,CAACC,MAAD,EAAS;AACd,SAAKF,KAAL,CAAWG,QAAX,CAAoB;AAClBC,MAAAA,IAAI,EAAEF;AADY,KAApB;AAGD;;AAEDG,EAAAA,MAAM,GAAG;AAEP;AACA,QAAIC,cAAc,GAAG,KAAKN,KAAL,CAAWO,QAAX,CAAoBC,GAApB,CAAwBC,IAAI,iBAAI;AAAA,sBAAOA,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA,YAAhC,CAArB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,EAAE,EAAC,WAAR;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,QAAX;AAAoB,UAAA,KAAK,EAAC,MAA1B;AAAiC,UAAA,IAAI,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,OAAX;AAAmB,UAAA,KAAK,EAAC,MAAzB;AAAgC,UAAA,IAAI,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAAkB,UAAA,KAAK,EAAC,OAAxB;AAAgC,UAAA,IAAI,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKR,OAAL,CAAa,UAAb,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKA,OAAL,CAAa,OAAb,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eASE,QAAC,IAAD;AAAA,6BAAaK,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AA9B+B;;AAkClC,IAAII,kBAAkB,GAAG,UAASP,QAAT,EAAmBH,KAAnB,EAA0B;AACjD,SAAO;AACHG,IAAAA,QAAQ,EAAEA;AADP,GAAP;AAGD,CAJD;;AAMA,IAAIQ,eAAe,GAAG,UAASC,KAAT,EAAgBZ,KAAhB,EAAuB;AAC3C,SAAO;AACLa,IAAAA,MAAM,EAAED,KAAK,CAACC,MADT;AAELN,IAAAA,QAAQ,EAAEK,KAAK,CAACL,QAFX;AAGLO,IAAAA,QAAQ,EAAEF,KAAK,CAACE;AAHX,GAAP;AAKD,CAND;;AAQA,eAAenB,OAAO,CACpBgB,eADoB,EAEpBD,kBAFoB,CAAP,CAGbb,GAHa,CAAf","sourcesContent":["import React from 'react';\nimport Icon from \"./components/Icon\";\nimport { connect } from 'react-redux';\nimport Deck from './components/Deck';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  onclick(action) {\n    this.props.dispatch({\n      type: action,\n    })\n  }\n\n  render() {\n\n    //from: https://stackoverflow.com/questions/45784479/create-a-bunch-of-divs-via-an-array\n    let renderedOutput = this.props.faceDown.map(item => <div> {item} </div>);\n\n    return (\n      <div className=\"wrapper\">\n        <h1>These are the icons</h1>\n        <div id=\"container\">\n          <Icon type=\"flower\" color=\"pink\" fill=\"white\"/>\n          <Icon type=\"heart\" color=\"blue\" fill=\"white\"/>\n          <Icon type=\"star\" color=\"green\" fill=\"green\"/>\n        </div>\n        <button onClick={() => this.onclick(\"NEW CARD\")}>New Card</button>\n        <button onClick={() => this.onclick(\"CLEAR\")}>Clear Cards</button>\n        <Deck>Deck: {renderedOutput} </Deck>\n      </div>\n    )\n  }\n\n}\n\nlet mapDispatchToProps = function(dispatch, props) {\n  return {\n      dispatch: dispatch,\n  }\n}\n\nlet mapStateToProps = function(state, props) {\n  return {\n    faceUp: state.faceUp,\n    faceDown: state.faceDown,\n    selected: state.selected,\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n"]},"metadata":{},"sourceType":"module"}