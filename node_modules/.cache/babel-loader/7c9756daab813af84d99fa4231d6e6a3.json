{"ast":null,"code":"var _jsxFileName = \"/Users/isidoraconic/Desktop/set-game/src/components/GameWrapper.js\";\nimport React from 'react';\nimport Game from './Game';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GameWrapper extends React.Component {\n  onclick(action) {\n    this.dispatch({\n      type: action\n    });\n  }\n\n  render() {\n    let renderedHTML = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deck\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \" Easy \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \" Medium \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \" Hard \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 26\n    }, this);\n\n    if (this.props.gameMode !== undefined) {\n      renderedHTML = /*#__PURE__*/_jsxDEV(Game, {\n        mode: this.props.gameMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 26\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderedHTML\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nlet mapDispatchToProps = function (dispatch, props) {\n  return {\n    dispatch: dispatch\n  };\n};\n\nlet mapStateToProps = function (state, props) {\n  return {\n    gameMode: state.game.gameMode\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameWrapper);","map":{"version":3,"sources":["/Users/isidoraconic/Desktop/set-game/src/components/GameWrapper.js"],"names":["React","Game","connect","GameWrapper","Component","onclick","action","dispatch","type","render","renderedHTML","props","gameMode","undefined","mapDispatchToProps","mapStateToProps","state","game"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAA0C;AACxCC,EAAAA,OAAO,CAACC,MAAD,EAAS;AACd,SAAKC,QAAL,CAAc;AACZC,MAAAA,IAAI,EAAEF;AADM,KAAd;AAGD;;AAEDG,EAAAA,MAAM,GAAG;AACL,QAAIC,YAAY,gBAAG;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADL,eAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFL,eAGK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHL;AAAA;AAAA;AAAA;AAAA;AAAA,YAAnB;;AAKA,QAAI,KAAKC,KAAL,CAAWC,QAAX,KAAwBC,SAA5B,EAAuC;AACnCH,MAAAA,YAAY,gBAAG,QAAC,IAAD;AAAM,QAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC;AAAvB;AAAA;AAAA;AAAA;AAAA,cAAf;AACH;;AACD,wBACI;AAAA,gBACKF;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AArBuC;;AAyB1C,IAAII,kBAAkB,GAAG,UAASP,QAAT,EAAmBI,KAAnB,EAA0B;AAC/C,SAAO;AACHJ,IAAAA,QAAQ,EAAEA;AADP,GAAP;AAGD,CAJH;;AAME,IAAIQ,eAAe,GAAG,UAASC,KAAT,EAAgBL,KAAhB,EAAuB;AAC3C,SAAO;AACLC,IAAAA,QAAQ,EAAEI,KAAK,CAACC,IAAN,CAAWL;AADhB,GAAP;AAGD,CAJD;;AAMA,eAAeV,OAAO,CACpBa,eADoB,EAEpBD,kBAFoB,CAAP,CAGbX,WAHa,CAAf","sourcesContent":["import React from 'react';\nimport Game from './Game';\nimport { connect } from 'react-redux';\n\nclass GameWrapper extends React.Component {\n  onclick(action) {\n    this.dispatch({\n      type: action\n    })\n  }\n\n  render() {\n      let renderedHTML = <div className=\"deck\"> \n                              <button> Easy </button>\n                              <button> Medium </button>\n                              <button> Hard </button> \n                          </div>\n      if (this.props.gameMode !== undefined) {\n          renderedHTML = <Game mode={this.props.gameMode}/>\n      }\n      return (\n          <div>\n              {renderedHTML}\n          </div> \n      )\n  }\n\n}\n\nlet mapDispatchToProps = function(dispatch, props) {\n    return {\n        dispatch: dispatch,\n    }\n  }\n  \n  let mapStateToProps = function(state, props) {\n    return {\n      gameMode: state.game.gameMode,\n    }\n  }\n  \n  export default connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(GameWrapper)"]},"metadata":{},"sourceType":"module"}