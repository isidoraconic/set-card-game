{"ast":null,"code":"var _jsxFileName = \"/Users/isidoraconic/Desktop/set-game/src/components/Game.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Card from './Card';\nimport MODES from '../actions/GameModeEnum';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  onclick(action) {\n    this.props.dispatch({\n      type: action\n    });\n  }\n\n  render() {\n    let renderedCards = this.props.faceUp.map((item, index) => {\n      let isSelected = this.props.selected.includes(index);\n      return /*#__PURE__*/_jsxDEV(Card, {\n        attributes: item,\n        index: index,\n        isSelected: isSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 14\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.onclick(\"CLEAR\"),\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.onclick(\"DRAW 3 CARDS\"),\n        children: \"Draw 3 Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Number of valid sets: \", this.props.numValidSets]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Number of remaining cards: \", this.props.faceDown.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"deck\",\n        children: renderedCards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nlet mapDispatchToProps = function (dispatch, props) {\n  return {\n    dispatch: dispatch\n  };\n};\n\nlet mapStateToProps = function (state, props) {\n  let modeState = {\n    mode: state.game.gameMode\n  };\n  return {\n    mode: state.game.gameMode,\n    faceUp: state.deck.faceUp,\n    faceDown: state.deck.faceDown,\n    selected: state.deck.selected,\n    numValidSets: state.deck.numValidSets\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);","map":{"version":3,"sources":["/Users/isidoraconic/Desktop/set-game/src/components/Game.js"],"names":["React","connect","Card","MODES","Game","Component","constructor","props","onclick","action","dispatch","type","render","renderedCards","faceUp","map","item","index","isSelected","selected","includes","numValidSets","faceDown","length","mapDispatchToProps","mapStateToProps","state","modeState","mode","game","gameMode","deck"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;;AAEA,MAAMC,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAAmC;AAEjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,OAAO,CAACC,MAAD,EAAS;AACd,SAAKF,KAAL,CAAWG,QAAX,CAAoB;AAClBC,MAAAA,IAAI,EAAEF;AADY,KAApB;AAGD;;AAEDG,EAAAA,MAAM,GAAG;AACP,QAAIC,aAAa,GAAG,KAAKN,KAAL,CAAWO,MAAX,CAAkBC,GAAlB,CAAsB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACzD,UAAIC,UAAU,GAAG,KAAKX,KAAL,CAAWY,QAAX,CAAoBC,QAApB,CAA6BH,KAA7B,CAAjB;AACA,0BAAO,QAAC,IAAD;AAAM,QAAA,UAAU,EAAED,IAAlB;AAAwB,QAAA,KAAK,EAAEC,KAA/B;AAAsC,QAAA,UAAU,EAAEC;AAAlD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAHmB,CAApB;AAIA,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKV,OAAL,CAAa,OAAb,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKA,OAAL,CAAa,cAAb,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,6CAA4B,KAAKD,KAAL,CAAWc,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,kDAAiC,KAAKd,KAAL,CAAWe,QAAX,CAAoBC,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBACGV;AADH;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AA5BgC;;AAgCnC,IAAIW,kBAAkB,GAAG,UAASd,QAAT,EAAmBH,KAAnB,EAA0B;AACjD,SAAO;AACHG,IAAAA,QAAQ,EAAEA;AADP,GAAP;AAGD,CAJD;;AAMA,IAAIe,eAAe,GAAG,UAASC,KAAT,EAAgBnB,KAAhB,EAAuB;AAEzC,MAAIoB,SAAS,GAAG;AACZC,IAAAA,IAAI,EAAEF,KAAK,CAACG,IAAN,CAAWC;AADL,GAAhB;AAIA,SAAO;AACHF,IAAAA,IAAI,EAAEF,KAAK,CAACG,IAAN,CAAWC,QADd;AAEHhB,IAAAA,MAAM,EAAEY,KAAK,CAACK,IAAN,CAAWjB,MAFhB;AAGHQ,IAAAA,QAAQ,EAAEI,KAAK,CAACK,IAAN,CAAWT,QAHlB;AAIHH,IAAAA,QAAQ,EAAEO,KAAK,CAACK,IAAN,CAAWZ,QAJlB;AAKHE,IAAAA,YAAY,EAAEK,KAAK,CAACK,IAAN,CAAWV;AALtB,GAAP;AAOH,CAbD;;AAeA,eAAepB,OAAO,CACpBwB,eADoB,EAEpBD,kBAFoB,CAAP,CAGbpB,IAHa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Card from './Card';\nimport MODES from '../actions/GameModeEnum'\n\nclass Game extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  onclick(action) {\n    this.props.dispatch({\n      type: action,\n    })\n  }\n\n  render() {\n    let renderedCards = this.props.faceUp.map((item, index) => {\n      let isSelected = this.props.selected.includes(index)\n      return <Card attributes={item} index={index} isSelected={isSelected}></Card>\n    });\n    return (\n      <div className=\"wrapper\">\n        <button onClick={() => this.onclick(\"CLEAR\")}>Clear</button>\n        <button onClick={() => this.onclick(\"DRAW 3 CARDS\")}>Draw 3 Cards</button>\n        <div>Number of valid sets: {this.props.numValidSets}</div>\n        <div>Number of remaining cards: {this.props.faceDown.length}</div>\n        <div className=\"deck\"> \n          {renderedCards}\n      </div>\n      </div>\n    )\n  }\n\n}\n\nlet mapDispatchToProps = function(dispatch, props) {\n  return {\n      dispatch: dispatch,\n  }\n}\n\nlet mapStateToProps = function(state, props) {\n\n    let modeState = {\n        mode: state.game.gameMode\n    }\n\n    return {\n        mode: state.game.gameMode,\n        faceUp: state.deck.faceUp,\n        faceDown: state.deck.faceDown,\n        selected: state.deck.selected,\n        numValidSets: state.deck.numValidSets\n    }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Game)\n"]},"metadata":{},"sourceType":"module"}