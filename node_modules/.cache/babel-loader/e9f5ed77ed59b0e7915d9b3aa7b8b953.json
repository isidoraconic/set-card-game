{"ast":null,"code":"var _jsxFileName = \"/Users/isidoraconic/Desktop/set-game/src/components/Game.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Deck from './Deck';\nimport MODES from '../actions/GameModeEnum';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  onclick(action) {\n    this.props.dispatch({\n      type: action\n    });\n  }\n\n  render() {\n    let drawAction = this.props.mode + \"/DRAW\";\n    let clearAction = this.props.mode + \"/CLEAR\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.onclick(\"CLEAR\"),\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.onclick(\"DRAW 3 CARDS\"),\n        children: \"Draw 3 Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Number of valid sets: \", this.props.numValidSets]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Deck, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nlet mapDispatchToProps = function (dispatch, props) {\n  return {\n    dispatch: dispatch\n  };\n};\n\nlet mapStateToProps = function (state, props) {\n  let modeState = {\n    mode: state.game.gameMode\n  }; // switch(state.game.gameMode) {\n  //     case MODES.EASY:\n  //         modeState.faceUp = state.easy.faceUp;\n  //         modeState.faceDown = state.easy.faceDown;\n  //         modeState.selected = state.easy.selected;\n  //         modeState.numValidSets = state.easy.numValidSets;\n  //     case MODES.MEDIUM:\n  //         modeState.faceUp = state.medium.faceUp;\n  //         modeState.faceDown = state.medium.faceDown;\n  //         modeState.selected = state.medium.selected;\n  //     case MODES.HARD:\n  //         modeState.faceup = state.hard.faceUp;\n  //         modeState.faceDown = state.hard.\n  // }\n\n  return {\n    mode: state.game.gameMode,\n    faceUp: state.deck.faceUp,\n    faceDown: state.deck.faceDown,\n    selected: state.deck.selected,\n    numValidSets: state.deck.numValidSets\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);","map":{"version":3,"sources":["/Users/isidoraconic/Desktop/set-game/src/components/Game.js"],"names":["React","connect","Deck","MODES","Game","Component","constructor","props","onclick","action","dispatch","type","render","drawAction","mode","clearAction","numValidSets","mapDispatchToProps","mapStateToProps","state","modeState","game","gameMode","faceUp","deck","faceDown","selected"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;;AAEA,MAAMC,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAAmC;AAEjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,OAAO,CAACC,MAAD,EAAS;AACd,SAAKF,KAAL,CAAWG,QAAX,CAAoB;AAClBC,MAAAA,IAAI,EAAEF;AADY,KAApB;AAGD;;AAEDG,EAAAA,MAAM,GAAG;AAEP,QAAIC,UAAU,GAAG,KAAKN,KAAL,CAAWO,IAAX,GAAkB,OAAnC;AACA,QAAIC,WAAW,GAAG,KAAKR,KAAL,CAAWO,IAAX,GAAkB,QAApC;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKN,OAAL,CAAa,OAAb,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKA,OAAL,CAAa,cAAb,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,6CAA4B,KAAKD,KAAL,CAAWS,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAxBgC;;AA4BnC,IAAIC,kBAAkB,GAAG,UAASP,QAAT,EAAmBH,KAAnB,EAA0B;AACjD,SAAO;AACHG,IAAAA,QAAQ,EAAEA;AADP,GAAP;AAGD,CAJD;;AAMA,IAAIQ,eAAe,GAAG,UAASC,KAAT,EAAgBZ,KAAhB,EAAuB;AAEzC,MAAIa,SAAS,GAAG;AACZN,IAAAA,IAAI,EAAEK,KAAK,CAACE,IAAN,CAAWC;AADL,GAAhB,CAFyC,CAMzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAO;AACHR,IAAAA,IAAI,EAAEK,KAAK,CAACE,IAAN,CAAWC,QADd;AAEHC,IAAAA,MAAM,EAAEJ,KAAK,CAACK,IAAN,CAAWD,MAFhB;AAGHE,IAAAA,QAAQ,EAAEN,KAAK,CAACK,IAAN,CAAWC,QAHlB;AAIHC,IAAAA,QAAQ,EAAEP,KAAK,CAACK,IAAN,CAAWE,QAJlB;AAKHV,IAAAA,YAAY,EAAEG,KAAK,CAACK,IAAN,CAAWR;AALtB,GAAP;AAOH,CA5BD;;AA8BA,eAAef,OAAO,CACpBiB,eADoB,EAEpBD,kBAFoB,CAAP,CAGbb,IAHa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Deck from './Deck';\nimport MODES from '../actions/GameModeEnum'\n\nclass Game extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  onclick(action) {\n    this.props.dispatch({\n      type: action,\n    })\n  }\n\n  render() {\n\n    let drawAction = this.props.mode + \"/DRAW\";\n    let clearAction = this.props.mode + \"/CLEAR\";\n    return (\n      <div className=\"wrapper\">\n        <button onClick={() => this.onclick(\"CLEAR\")}>Clear</button>\n        <button onClick={() => this.onclick(\"DRAW 3 CARDS\")}>Draw 3 Cards</button>\n        <div>Number of valid sets: {this.props.numValidSets}</div> \n        <Deck></Deck>\n      </div>\n    )\n  }\n\n}\n\nlet mapDispatchToProps = function(dispatch, props) {\n  return {\n      dispatch: dispatch,\n  }\n}\n\nlet mapStateToProps = function(state, props) {\n\n    let modeState = {\n        mode: state.game.gameMode\n    }\n\n    // switch(state.game.gameMode) {\n    //     case MODES.EASY:\n    //         modeState.faceUp = state.easy.faceUp;\n    //         modeState.faceDown = state.easy.faceDown;\n    //         modeState.selected = state.easy.selected;\n    //         modeState.numValidSets = state.easy.numValidSets;\n    //     case MODES.MEDIUM:\n    //         modeState.faceUp = state.medium.faceUp;\n    //         modeState.faceDown = state.medium.faceDown;\n    //         modeState.selected = state.medium.selected;\n    //     case MODES.HARD:\n    //         modeState.faceup = state.hard.faceUp;\n    //         modeState.faceDown = state.hard.\n    // }\n\n    return {\n        mode: state.game.gameMode,\n        faceUp: state.deck.faceUp,\n        faceDown: state.deck.faceDown,\n        selected: state.deck.selected,\n        numValidSets: state.deck.numValidSets\n    }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Game)\n"]},"metadata":{},"sourceType":"module"}