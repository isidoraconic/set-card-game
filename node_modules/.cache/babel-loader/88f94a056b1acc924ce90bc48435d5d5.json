{"ast":null,"code":"var _jsxFileName = \"/Users/isidoraconic/Desktop/set-game/src/components/Game.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Deck from './Deck';\nimport MODES from '../actions/GameModeEnum';\nimport '../style/Game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  onclick(action) {\n    this.props.dispatch({\n      type: action\n    });\n  }\n\n  render() {\n    let currentHTML = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"level\",\n        children: [\"Playing \", this.props.gameMode, \" level game!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"draw-button\",\n        onClick: () => this.onclick(\"DRAW 3 CARDS\"),\n        children: \"Draw Three Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"counters-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"set-counter\",\n          children: [\"Number of valid sets: \", this.props.numValidSets]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-counter\",\n          children: [\"Number of remaining cards: \", this.props.faceDown.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Deck, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this);\n\n    if (this.props.faceDown === 0 && this.props.numValidSets > 0) {\n      currentHTML = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"win-message\",\n        children: \"Congrats you won the game! Select from the menu options to play another game or go back home. :)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: currentHTML\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nlet mapDispatchToProps = function (dispatch, props) {\n  return {\n    dispatch: dispatch\n  };\n};\n\nlet mapStateToProps = function (state, props) {\n  return {\n    gameMode: state.gameMode,\n    faceUp: state.faceUp,\n    faceDown: state.faceDown,\n    selected: state.selected,\n    numValidSets: state.numValidSets\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);","map":{"version":3,"sources":["/Users/isidoraconic/Desktop/set-game/src/components/Game.js"],"names":["React","connect","Deck","MODES","Game","Component","constructor","props","onclick","action","dispatch","type","render","currentHTML","gameMode","numValidSets","faceDown","length","mapDispatchToProps","mapStateToProps","state","faceUp","selected"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAO,mBAAP;;;AAEA,MAAMC,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAAmC;AAEjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,OAAO,CAACC,MAAD,EAAS;AACd,SAAKF,KAAL,CAAWG,QAAX,CAAoB;AAClBC,MAAAA,IAAI,EAAEF;AADY,KAApB;AAGD;;AAEDG,EAAAA,MAAM,GAAG;AACP,QAAIC,WAAW,gBACf;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA,+BAA+B,KAAKN,KAAL,CAAWO,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,OAAO,EAAE,MAAM,KAAKN,OAAL,CAAa,cAAb,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,+CAAoD,KAAKD,KAAL,CAAWQ,YAA/D;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,oDAA0D,KAAKR,KAAL,CAAWS,QAAX,CAAoBC,MAA9E;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAOE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;;AAWA,QAAI,KAAKV,KAAL,CAAWS,QAAX,KAAwB,CAAxB,IAA6B,KAAKT,KAAL,CAAWQ,YAAX,GAA0B,CAA3D,EAA8D;AAC5DF,MAAAA,WAAW,gBAAG;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAd;AAID;;AACD,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBACGA;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAnCgC;;AAuCnC,IAAIK,kBAAkB,GAAG,UAASR,QAAT,EAAmBH,KAAnB,EAA0B;AACjD,SAAO;AACHG,IAAAA,QAAQ,EAAEA;AADP,GAAP;AAGD,CAJD;;AAMA,IAAIS,eAAe,GAAG,UAASC,KAAT,EAAgBb,KAAhB,EAAuB;AACzC,SAAO;AACHO,IAAAA,QAAQ,EAAEM,KAAK,CAACN,QADb;AAEHO,IAAAA,MAAM,EAAED,KAAK,CAACC,MAFX;AAGHL,IAAAA,QAAQ,EAAEI,KAAK,CAACJ,QAHb;AAIHM,IAAAA,QAAQ,EAAEF,KAAK,CAACE,QAJb;AAKHP,IAAAA,YAAY,EAAEK,KAAK,CAACL;AALjB,GAAP;AAOH,CARD;;AAUA,eAAed,OAAO,CACpBkB,eADoB,EAEpBD,kBAFoB,CAAP,CAGbd,IAHa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Deck from './Deck';\nimport MODES from '../actions/GameModeEnum'\nimport '../style/Game.css';\n\nclass Game extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  onclick(action) {\n    this.props.dispatch({\n      type: action,\n    })\n  }\n\n  render() {\n    let currentHTML = (\n    <div className=\"game-container\">\n      <h2 className=\"level\">Playing {this.props.gameMode} level game!</h2>\n      <button className=\"draw-button\" onClick={() => this.onclick(\"DRAW 3 CARDS\")}>Draw Three Cards</button>\n      <div className=\"counters-container\">\n        <div className=\"set-counter\">Number of valid sets: {this.props.numValidSets}</div>\n        <div className=\"card-counter\">Number of remaining cards: {this.props.faceDown.length}</div>\n      </div>\n      <Deck></Deck>\n    </div>\n    )\n    if (this.props.faceDown === 0 && this.props.numValidSets > 0) {\n      currentHTML = <div className=\"win-message\"> \n        Congrats you won the game! Select from the menu options to play another game or\n        go back home. :) \n      </div>\n    }\n    return (\n      <div className=\"wrapper\">\n        {currentHTML}\n      </div>\n    )\n  }\n\n}\n\nlet mapDispatchToProps = function(dispatch, props) {\n  return {\n      dispatch: dispatch,\n  }\n}\n\nlet mapStateToProps = function(state, props) {\n    return {\n        gameMode: state.gameMode,\n        faceUp: state.faceUp,\n        faceDown: state.faceDown,\n        selected: state.selected,\n        numValidSets: state.numValidSets\n    }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Game)\n"]},"metadata":{},"sourceType":"module"}