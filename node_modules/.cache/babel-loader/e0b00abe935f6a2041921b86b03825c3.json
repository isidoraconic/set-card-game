{"ast":null,"code":"var _jsxFileName = \"/Users/isidoraconic/Desktop/set-game/src/components/Game.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Deck from './Deck';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  onclick(action) {\n    this.props.dispatch({\n      type: action\n    });\n  }\n\n  render() {\n    let drawAction = this.props.mode + \"/DRAW\";\n    let clearAction = this.props.mode + \"/CLEAR\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.onclick(\"NEW CARD\"),\n        children: \"New Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.onclick(\"CLEAR\"),\n        children: \"Clear Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Deck, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nlet mapDispatchToProps = function (dispatch, props) {\n  return {\n    dispatch: dispatch\n  };\n};\n\nlet mapStateToProps = function (state, props) {\n  return {\n    gameMode: state.game.gameMode,\n    faceUp: state.deck.faceUp,\n    faceDown: state.deck.faceDown,\n    selected: state.deck.selected\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);","map":{"version":3,"sources":["/Users/isidoraconic/Desktop/set-game/src/components/Game.js"],"names":["React","connect","Deck","Game","Component","constructor","props","onclick","action","dispatch","type","render","drawAction","mode","clearAction","mapDispatchToProps","mapStateToProps","state","gameMode","game","faceUp","deck","faceDown","selected"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AAEjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,OAAO,CAACC,MAAD,EAAS;AACd,SAAKF,KAAL,CAAWG,QAAX,CAAoB;AAClBC,MAAAA,IAAI,EAAEF;AADY,KAApB;AAGD;;AAEDG,EAAAA,MAAM,GAAG;AAEP,QAAIC,UAAU,GAAG,KAAKN,KAAL,CAAWO,IAAX,GAAkB,OAAnC;AACA,QAAIC,WAAW,GAAG,KAAKR,KAAL,CAAWO,IAAX,GAAkB,QAApC;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKN,OAAL,CAAa,UAAb,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKA,OAAL,CAAa,OAAb,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAvBgC;;AA2BnC,IAAIQ,kBAAkB,GAAG,UAASN,QAAT,EAAmBH,KAAnB,EAA0B;AACjD,SAAO;AACHG,IAAAA,QAAQ,EAAEA;AADP,GAAP;AAGD,CAJD;;AAMA,IAAIO,eAAe,GAAG,UAASC,KAAT,EAAgBX,KAAhB,EAAuB;AAC3C,SAAO;AACLY,IAAAA,QAAQ,EAAED,KAAK,CAACE,IAAN,CAAWD,QADhB;AAELE,IAAAA,MAAM,EAAEH,KAAK,CAACI,IAAN,CAAWD,MAFd;AAGLE,IAAAA,QAAQ,EAAEL,KAAK,CAACI,IAAN,CAAWC,QAHhB;AAILC,IAAAA,QAAQ,EAAEN,KAAK,CAACI,IAAN,CAAWE;AAJhB,GAAP;AAMD,CAPD;;AASA,eAAetB,OAAO,CACpBe,eADoB,EAEpBD,kBAFoB,CAAP,CAGbZ,IAHa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Deck from './Deck';\n\nclass Game extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  onclick(action) {\n    this.props.dispatch({\n      type: action,\n    })\n  }\n\n  render() {\n\n    let drawAction = this.props.mode + \"/DRAW\";\n    let clearAction = this.props.mode + \"/CLEAR\";\n    return (\n      <div className=\"wrapper\">\n        <button onClick={() => this.onclick(\"NEW CARD\")}>New Card</button>\n        <button onClick={() => this.onclick(\"CLEAR\")}>Clear Cards</button>\n        <Deck></Deck>\n      </div>\n    )\n  }\n\n}\n\nlet mapDispatchToProps = function(dispatch, props) {\n  return {\n      dispatch: dispatch,\n  }\n}\n\nlet mapStateToProps = function(state, props) {\n  return {\n    gameMode: state.game.gameMode,\n    faceUp: state.deck.faceUp,\n    faceDown: state.deck.faceDown,\n    selected: state.deck.selected,\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Game)\n"]},"metadata":{},"sourceType":"module"}