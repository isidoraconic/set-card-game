{"ast":null,"code":"var _jsxFileName = \"/Users/isidoraconic/Desktop/web-projects/set-game/src/components/Card.js\";\nimport Icon from \"./Icon\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport '../style/Card.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Card extends React.Component {\n  onclick(action, index) {\n    this.props.dispatch({\n      type: action,\n      index: index\n    });\n  }\n\n  render() {\n    let isSelected = (this.props.index in this.props.selected);\n    let icons = [];\n\n    for (let i = 0; i < this.props.attributes.shapeCount; i++) {\n      icons.push( /*#__PURE__*/_jsxDEV(Icon, {\n        type: this.props.attributes.shape,\n        color: this.props.attributes.color,\n        fill: this.props.attributes.shade\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 24\n      }, this));\n    }\n\n    ;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      onClick: () => this.onclick(\"SELECT\", this.props.index),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"icon-container\",\n        children: icons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nlet mapDispatchToProps = function (dispatch, props) {\n  return {\n    dispatch: dispatch\n  };\n};\n\nlet mapStateToProps = function (state, props) {\n  return {\n    faceUp: state.faceUp,\n    selected: state.selected\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);","map":{"version":3,"sources":["/Users/isidoraconic/Desktop/web-projects/set-game/src/components/Card.js"],"names":["Icon","React","connect","Card","Component","onclick","action","index","props","dispatch","type","render","isSelected","selected","icons","i","attributes","shapeCount","push","shape","color","shade","mapDispatchToProps","mapStateToProps","state","faceUp"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,mBAAP;;;AAEA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;AAE/BC,EAAAA,OAAO,CAACC,MAAD,EAASC,KAAT,EAAgB;AACnB,SAAKC,KAAL,CAAWC,QAAX,CAAoB;AAChBC,MAAAA,IAAI,EAAEJ,MADU;AAEhBC,MAAAA,KAAK,EAAEA;AAFS,KAApB;AAIH;;AAEDI,EAAAA,MAAM,GAAG;AACL,QAAIC,UAAU,IAAG,KAAKJ,KAAL,CAAWD,KAAX,IAAoB,KAAKC,KAAL,CAAWK,QAAlC,CAAd;AACA,QAAIC,KAAK,GAAG,EAAZ;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAKP,KAAL,CAAWQ,UAAX,CAAsBC,UAAzC,EAAqDF,CAAC,EAAtD,EAA0D;AACtDD,MAAAA,KAAK,CAACI,IAAN,eAAW,QAAC,IAAD;AAAM,QAAA,IAAI,EAAE,KAAKV,KAAL,CAAWQ,UAAX,CAAsBG,KAAlC;AAAyC,QAAA,KAAK,EAAE,KAAKX,KAAL,CAAWQ,UAAX,CAAsBI,KAAtE;AAA6E,QAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWQ,UAAX,CAAsBK;AAAzG;AAAA;AAAA;AAAA;AAAA,cAAX;AACH;;AAAA;AAED,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,OAAO,EAAE,MAAM,KAAKhB,OAAL,CAAa,QAAb,EAAuB,KAAKG,KAAL,CAAWD,KAAlC,CAArC;AAAA,6BACI;AAAK,QAAA,EAAE,EAAC,gBAAR;AAAA,kBACKO;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAvB8B;;AA0BnC,IAAIQ,kBAAkB,GAAG,UAASb,QAAT,EAAmBD,KAAnB,EAA0B;AAC/C,SAAO;AACHC,IAAAA,QAAQ,EAAEA;AADP,GAAP;AAGD,CAJH;;AAME,IAAIc,eAAe,GAAG,UAASC,KAAT,EAAgBhB,KAAhB,EAAuB;AAC3C,SAAO;AACLiB,IAAAA,MAAM,EAAED,KAAK,CAACC,MADT;AAELZ,IAAAA,QAAQ,EAAEW,KAAK,CAACX;AAFX,GAAP;AAID,CALD;;AAOA,eAAeX,OAAO,CACpBqB,eADoB,EAEpBD,kBAFoB,CAAP,CAGbnB,IAHa,CAAf","sourcesContent":["import Icon from \"./Icon\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport '../style/Card.css';\n\nclass Card extends React.Component {\n\n    onclick(action, index) { \n        this.props.dispatch({\n            type: action,\n            index: index\n        })\n    }\n\n    render() {\n        let isSelected = this.props.index in this.props.selected\n        let icons = [];\n        for(let i = 0; i < this.props.attributes.shapeCount; i++) {\n            icons.push(<Icon type={this.props.attributes.shape} color={this.props.attributes.color} fill={this.props.attributes.shade}></Icon>);\n        };\n        \n        return (\n            <div className=\"card\" onClick={() => this.onclick(\"SELECT\", this.props.index)}>\n                <div id=\"icon-container\">\n                    {icons}\n                </div>\n            </div>\n        )\n    }\n}\n\nlet mapDispatchToProps = function(dispatch, props) {\n    return {\n        dispatch: dispatch,\n    }\n  }\n  \n  let mapStateToProps = function(state, props) {\n    return {\n      faceUp: state.faceUp,\n      selected: state.selected,\n    }\n  }\n  \n  export default connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Card)"]},"metadata":{},"sourceType":"module"}